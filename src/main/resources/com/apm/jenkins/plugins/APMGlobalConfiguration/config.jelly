<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form" xmlns:c="/lib/credentials" >
  <!--
    This Jelly script is used to produce the global configuration option.

    Jenkins uses a set of tag libraries to provide uniformity in forms.
    To determine where this tag is defined, first check the namespace URI,
    and then look under $JENKINS/views/. For example, <f:section> is defined
    in $JENKINS/views/lib/form/section.jelly.

    It's also often useful to just check other similar scripts to see what
    tags they use. Views are always organized according to its owner class,
    so it should be straightforward to find them.
  -->
  <f:section title="APM Jenkins Plugin">
    <f:entry title="Target Destination">
       	<f:description>Specify if you want to forward metrics to Snappyflow or another destination.</f:description>
    	<f:radio title="Snappyflow" field="targetDestination" value="Snappyflow" 
    		checked="${instance.targetDestination == 'Snappyflow'}">
    			<f:entry title="Snappyflow Project Name" field="targetProjectNameEntry" description="Project Name where API key is validated." >
			    <f:textbox field="targetProjectName" default="${targetProjectName}" checkMethod="post" />
			    </f:entry>
			        
			    <f:entry title="Snappyflow Application Name" field="targetAppNameEntry" description="Application Name where API key is validated." >
			    <f:textbox field="targetAppName" default="${targetAppName}" checkMethod="post" />
			    </f:entry>
			        
			    <f:entry title="Snappyflow Instance Name" field="targetInstanceNameEntry" description="Instance Name where API key is validated." >
			    <f:textbox field="targetInstanceName" default="${targetInstanceName}" checkMethod="post" />
			    </f:entry>
			
			    <f:entry title="Snappyflow API Key" field="targetApiKeyEntry">
			    <f:password field="targetApiKey" default="${targetApiKey}" checkMethod="post" />
			    </f:entry>
			    <f:validateButton title="${%Test Key}" progress="${%Testing...}" method="testConnection" with="targetApiKey,targetProjectName,targetAppName,targetInstanceName" checkMethod="post" />    		
    		</f:radio>
    	
    	<f:radio title="Other" field="targetDestination" value="Other" 
    		checked="${instance.targetDestination == 'Other'}">Other    			    		
    	</f:radio>
	</f:entry>

	
		     
   </f:section>
</j:jelly>